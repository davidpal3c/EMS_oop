@page "/"
@using Models
@using Services
@inject Services.DBService DBService
@inject Services.EmployeeService EmployeeService
@inject Services.PayrollService PayrollService
@inject Services.TimeRecordService TimeRecordService

<h1>Home</h1>

Welcome to the Employee Management System!

<div class="home-section">
    <NavLink class="navv" href="employees"><div class="home-sub-section"><span>@employeeList.Count</span><div>Employees</div>
    
    </div></NavLink>
    <NavLink class="navv" href="payroll"><div class="home-sub-section"><span>@payrollList.Count</span><div>Payrolls</div></div></NavLink>
    <NavLink class="navv" href="timerecord"><div class="home-sub-section"><span>@timeList.Count</span><div>Time Records</div></div></NavLink>
</div>
<div class="home-section1">
   
    <div class="hs1">
        <h5>Employee Status Summary</h5>
        <table class="table">
            <tr class="tr-head"><th>Status</th><th class="td-actions">Number of employees</th></tr><tbody>
                @if(employeeReport1.Count == 0)
                {
                    <div class="loader">Loading...</div>
                }else{
            @foreach (EmployeeView er1 in employeeReport1)
            {
                <tr>
                    <td>@er1.Title</td>
                    <td class="td-actions">@er1.Count</td>
                </tr>
            }
                }
            </tbody>
        </table>
        </div>

        <div class="hs1">
            <h5>Employee Role Summary</h5>
        <table class="table">
            <tr class="tr-head"><th>Roles</th><th class="td-actions">Number of employees</th></tr><tbody>
                 @if(employeeReport2.Count == 0)
                {
                    <div class="loader">Loading...</div>
                }else{
            @foreach (EmployeeView er2 in employeeReport2)
            {
                <tr>
                    <td>@er2.Title</td>
                    <td class="td-actions">@er2.Count</td>
                </tr>
            }
                }
            </tbody>
        </table>
    </div>

    <div class="hs1">
        <h5>Time Record Summary</h5>
        <table class="table">
            <tr class="tr-head"><th>Type</th><th class="td-actions">Number of employees</th></tr>
            <tbody>
                @if (employeeReport2.Count == 0)
                {
                    <div class="loader">Loading...</div>
                }
                else
                {
                    @foreach (TimeRecordView tr in timeRecordReport)
                    {
                        <tr>
                            <td>@tr.Title</td>
                            <td class="td-actions">@tr.Count</td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
  
</div>

@code{

    private List<Models.Payroll> payrollList = new List<Models.Payroll>();
    private List<Models.Employee> employeeList = new List<Models.Employee>();
    private List<Models.EmployeeView> employeeReport1 = new List<Models.EmployeeView>();
    private List<Models.EmployeeView> employeeReport2 = new List<Models.EmployeeView>();
    private List<Models.TimeRecordView> timeRecordReport = new List<Models.TimeRecordView>();
    private List<Models.TimeRecord> timeList = new List<Models.TimeRecord>();

    protected override async Task OnInitializedAsync()
    {

        if (DBService.IsSuccessfulConnection())
        {
       
        }
        else
        {
            //msg = "Reconfigure connection string at MauiProgram.cs";
            //alert = "alert-danger";
        }

    
        await RefreshList();
    }

    // Retrieves data from the database and returns lists for each table
    private async Task RefreshList()
    {
        try
        {
            employeeList = await EmployeeService.GetEmployees("Id");
            employeeReport1 = await EmployeeService.GetEmployeeReport1();
            employeeReport2 = await EmployeeService.GetEmployeeReport2();
            timeRecordReport = await TimeRecordService.GetTimeRecordsReport();
            payrollList = await PayrollService.GetPayrolls("Id");
            timeList = await TimeRecordService.GetTimeRecords("Id");
         
        }
        catch (Exception e)
        {
            //msg = $"Error during refresh: {e.Message}";
            //alert = "alert-danger";
        }
    }
}
